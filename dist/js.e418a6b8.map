{"version":3,"sources":["js\\index.js"],"names":["endpoint","cities","fetch","then","blob","json","push","data","findMatches","searchTerm","filter","regex","RegExp","place","city","match","state","displayResults","resultsArray","value","html","map","cityName","replace","stateName","addCommas","population","join","console","log","suggestions","innerHTML","x","toString","searchInput","document","querySelector","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,WAAW,2HAAjB;;AAEA,IAAMC,SAAS,EAAf;;AAEAC,MAAMF,QAAN,EAAgBG,IAAhB,CAAqB;AAAA,WAAQC,KAAKC,IAAL,EAAR;AAAA,CAArB,EACKF,IADL,CACU;AAAA,WAAQF,OAAOK,IAAP,kCAAeC,IAAf,EAAR;AAAA,CADV;;AAGA,SAASC,WAAT,CAAqBC,UAArB,EAAiCR,MAAjC,EAAyC;AACrC,WAAOA,OAAOS,MAAP,CAAc,iBAAS;AAC1B;AACA,YAAMC,QAAQ,IAAIC,MAAJ,CAAWH,UAAX,EAAuB,IAAvB,CAAd;AACA,eAAOI,MAAMC,IAAN,CAAWC,KAAX,CAAiBJ,KAAjB,KAA2BE,MAAMG,KAAN,CAAYD,KAAZ,CAAkBJ,KAAlB,CAAlC;AACH,KAJM,CAAP;AAKH;;AAGD,SAASM,cAAT,GAA0B;AAAA;;AACtB,QAAMC,eAAeV,YAAY,KAAKW,KAAjB,EAAwBlB,MAAxB,CAArB;AACA,QAAMmB,OAAOF,aAAaG,GAAb,CAAiB,iBAAS;AACnC,YAAMV,QAAQ,IAAIC,MAAJ,CAAW,MAAKO,KAAhB,EAAuB,IAAvB,CAAd;AACA,YAAMG,WAAWT,MAAMC,IAAN,CAAWS,OAAX,CAAmBZ,KAAnB,+BAAqD,MAAKQ,KAA1D,aAAjB;AACA,YAAMK,YAAYX,MAAMG,KAAN,CAAYO,OAAZ,CAAoBZ,KAApB,+BAAsD,MAAKQ,KAA3D,aAAlB;AACA,4DAEoBG,QAFpB,UAEiCE,SAFjC,8CAGqBC,UAAUZ,MAAMa,UAAhB,CAHrB;AAMH,KAVY,EAUVC,IAVU,CAUL,EAVK,CAAb;AAWAC,YAAQC,GAAR,CAAYT,IAAZ;AACAU,gBAAYC,SAAZ,GAAwBX,IAAxB;AACH;;AAED;;AAEA,SAASK,SAAT,CAAmBO,CAAnB,EAAsB;AAClB,WAAOA,EAAEC,QAAF,GAAaV,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACH;;AAGD,IAAMW,cAAcC,SAASC,aAAT,CAAuB,SAAvB,CAApB;AACA,IAAMN,cAAcK,SAASC,aAAT,CAAuB,cAAvB,CAApB;;AAEAF,YAAYG,gBAAZ,CAA6B,QAA7B,EAAuCpB,cAAvC;AACAiB,YAAYG,gBAAZ,CAA6B,OAA7B,EAAsCpB,cAAtC","file":"js.e418a6b8.map","sourceRoot":"..","sourcesContent":["const endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';\r\n\r\nconst cities = [];\r\n\r\nfetch(endpoint).then(blob => blob.json())\r\n    .then(data => cities.push(...data));\r\n\r\nfunction findMatches(searchTerm, cities) {\r\n    return cities.filter(place => {\r\n        // Figure out if city or state matches search term\r\n        const regex = new RegExp(searchTerm, 'gi');\r\n        return place.city.match(regex) || place.state.match(regex);\r\n    })\r\n}\r\n\r\n\r\nfunction displayResults() {\r\n    const resultsArray = findMatches(this.value, cities);\r\n    const html = resultsArray.map(place => {\r\n        const regex = new RegExp(this.value, 'gi');\r\n        const cityName = place.city.replace(regex, `<span class=\"highlight\">${this.value}</span>`);\r\n        const stateName = place.state.replace(regex, `<span class=\"highlight\">${this.value}</span>`);\r\n        return `\r\n\t\t<li>\r\n\t\t<span class=\"placename\">${cityName}, ${stateName}</span>\r\n\t\t<span class=\"population\">${addCommas(place.population)}</span>\r\n\t\t</li>\r\n\t\t`;\r\n    }).join('');\r\n    console.log(html);\r\n    suggestions.innerHTML = html;\r\n}\r\n\r\n// Add commas to population\r\n\r\nfunction addCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n\r\n\r\nconst searchInput = document.querySelector('.search');\r\nconst suggestions = document.querySelector('.suggestions');\r\n\r\nsearchInput.addEventListener('change', displayResults);\r\nsearchInput.addEventListener('keyup', displayResults);"]}